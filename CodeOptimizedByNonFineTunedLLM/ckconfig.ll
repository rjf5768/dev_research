; ModuleID = '/project/test/llvm-test-suite/MultiSource/Benchmarks/mediabench/jpeg/jpeg-6a/ckconfig.c'
source_filename = "/project/test/llvm-test-suite/MultiSource/Benchmarks/mediabench/jpeg/jpeg-6a/ckconfig.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@carray = internal constant [3 x i32] [i32 1, i32 2, i32 3], align 4
@.str = private unnamed_addr constant [62 x i8] c"Hmm, it seems 'char' is not eight bits wide on your machine.\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"I fear the JPEG software will not work at all.\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"Right shift isn't acting as I expect it to.\0A\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"jconfig.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"Failed to write jconfig.h\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"/* jconfig.h --- generated by ckconfig.c */\0A\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"/* see jconfig.doc for explanations */\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"#define HAVE_PROTOTYPES\0A\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"#define HAVE_UNSIGNED_CHAR\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"#define HAVE_UNSIGNED_SHORT\0A\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"/* #define void char */\0A\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"/* #define const */\0A\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"#undef CHAR_IS_UNSIGNED\0A\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"#define CHAR_IS_UNSIGNED\0A\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"#define HAVE_STDDEF_H\0A\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"#define HAVE_STDLIB_H\0A\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"#undef NEED_BSD_STRINGS\0A\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"#undef NEED_SYS_TYPES_H\0A\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"#undef NEED_FAR_POINTERS\0A\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"#undef NEED_SHORT_EXTERNAL_NAMES\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"#undef INCOMPLETE_TYPES_BROKEN\0A\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"\0A#ifdef JPEG_INTERNALS\0A\0A\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"#undef RIGHT_SHIFT_IS_UNSIGNED\0A\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"#define RIGHT_SHIFT_IS_UNSIGNED\0A\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"\0A#endif /* JPEG_INTERNALS */\0A\00", align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"\0A#ifdef JPEG_CJPEG_DJPEG\0A\0A\00", align 1
@.str.27 = private unnamed_addr constant [52 x i8] c"#define BMP_SUPPORTED\09\09/* BMP image file format */\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"#define GIF_SUPPORTED\09\09/* GIF image file format */\0A\00", align 1
@.str.29 = private unnamed_addr constant [64 x i8] c"#define PPM_SUPPORTED\09\09/* PBMPLUS PPM/PGM image file format */\0A\00", align 1
@.str.30 = private unnamed_addr constant [56 x i8] c"#undef RLE_SUPPORTED\09\09/* Utah RLE image file format */\0A\00", align 1
@.str.31 = private unnamed_addr constant [57 x i8] c"#define TARGA_SUPPORTED\09\09/* Targa image file format */\0A\0A\00", align 1
@.str.32 = private unnamed_addr constant [73 x i8] c"#undef TWO_FILE_COMMANDLINE\09/* You may need this on non-Unix systems */\0A\00", align 1
@.str.33 = private unnamed_addr constant [68 x i8] c"#undef NEED_SIGNAL_CATCHER\09/* Define this if you use jmemname.c */\0A\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"#undef DONT_USE_B_MODE\0A\00", align 1
@.str.35 = private unnamed_addr constant [46 x i8] c"/* #define PROGRESS_REPORT */\09/* optional */\0A\00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"\0A#endif /* JPEG_CJPEG_DJPEG */\0A\00", align 1
@.str.37 = private unnamed_addr constant [65 x i8] c"Configuration check for Independent JPEG Group's software done.\0A\00", align 1
@.str.38 = private unnamed_addr constant [46 x i8] c"\0AI have written the jconfig.h file for you.\0A\0A\00", align 1
@.str.39 = private unnamed_addr constant [71 x i8] c"You should use makefile.ansi as the starting point for your Makefile.\0A\00", align 1
@un_char = dso_local global i8 0, align 1
@un_short = dso_local global i16 0, align 2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @testfunction(i32 noundef %0, i32* noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  store i32 %0, i32* %3, align 4
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %4, align 8
  %6 = load i32, i32* %3, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds i32, i32* %5, i64 %7
  %9 = load i32, i32* %8, align 4
  ret i32 %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @test2function() #0 {
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @test3function(i8* noundef %0, void (i32, i32)* noundef %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca void (i32, i32)*, align 8
  %5 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store void (i32, i32)* %1, void (i32, i32)** %4, align 8
  %6 = load i8*, i8** %3, align 8
  store i8* %6, i8** %5, align 8
  %7 = load i8*, i8** %5, align 8
  store i8* %7, i8** %3, align 8
  %8 = load void (i32, i32)*, void (i32, i32)** %4, align 8
  call void %8(i32 noundef 1, i32 noundef 2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @test4function(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [3 x i32], [3 x i32]* @carray, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @possibly_duplicate_function() #0 {
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @possibly_dupli_function() #0 {
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_char_signed(i32 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 189
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  store i32 0, i32* %2, align 4
  br label %15

7:                                                ; preds = %1
  %8 = load i32, i32* %3, align 4
  %9 = icmp ne i32 %8, -67
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  %11 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0))
  br label %13

13:                                               ; preds = %10, %7
  br label %14

14:                                               ; preds = %13
  store i32 1, i32* %2, align 4
  br label %15

15:                                               ; preds = %14, %6
  %16 = load i32, i32* %2, align 4
  ret i32 %16
}

declare dso_local i32 @printf(i8* noundef, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_shifting_signed(i64 noundef %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %5 = load i64, i64* %3, align 8
  %6 = ashr i64 %5, 4
  store i64 %6, i64* %4, align 8
  %7 = load i64, i64* %4, align 8
  %8 = icmp eq i64 %7, -133687308
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 1, i32* %2, align 4
  br label %19

10:                                               ; preds = %1
  %11 = load i64, i64* %4, align 8
  %12 = or i64 %11, -268435456
  store i64 %12, i64* %4, align 8
  %13 = load i64, i64* %4, align 8
  %14 = icmp eq i64 %13, -133687308
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  store i32 0, i32* %2, align 4
  br label %19

16:                                               ; preds = %10
  %17 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0))
  %18 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %2, align 4
  br label %19

19:                                               ; preds = %16, %15, %9
  %20 = load i32, i32* %2, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 noundef %0, i8** noundef %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca %struct._IO_FILE*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8 -67, i8* %6, align 1
  %8 = call noalias %struct._IO_FILE* @fopen(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  store %struct._IO_FILE* %8, %struct._IO_FILE** %7, align 8
  %9 = icmp eq %struct._IO_FILE* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %2
  %11 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %92

12:                                               ; preds = %2
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %13, i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0))
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %15, i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0))
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %17, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0))
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %19, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0))
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %21, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0))
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %23, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0))
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %25, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0))
  %27 = load i8, i8* %6, align 1
  %28 = sext i8 %27 to i32
  %29 = call i32 @is_char_signed(i32 noundef %28)
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %12
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %32, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0))
  br label %37

34:                                               ; preds = %12
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %35, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0))
  br label %37

37:                                               ; preds = %34, %31
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %38, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0))
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %40, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0))
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %42, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0))
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %44, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0))
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %46, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0))
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %48, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0))
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %51 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %50, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0))
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %52, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0))
  %54 = call i32 @is_shifting_signed(i64 noundef -2138996913)
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %37
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %57, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0))
  br label %62

59:                                               ; preds = %37
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %60, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0))
  br label %62

62:                                               ; preds = %59, %56
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %63, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0))
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %65, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0))
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %67, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.27, i64 0, i64 0))
  %69 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %69, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i64 0, i64 0))
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %71, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.29, i64 0, i64 0))
  %73 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %73, i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.30, i64 0, i64 0))
  %75 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %75, i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.31, i64 0, i64 0))
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %77, i8* noundef getelementptr inbounds ([73 x i8], [73 x i8]* @.str.32, i64 0, i64 0))
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %79, i8* noundef getelementptr inbounds ([68 x i8], [68 x i8]* @.str.33, i64 0, i64 0))
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %81, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0))
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %83, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35, i64 0, i64 0))
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* noundef %85, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0))
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %88 = call i32 @fclose(%struct._IO_FILE* noundef %87)
  %89 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.37, i64 0, i64 0))
  %90 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.38, i64 0, i64 0))
  %91 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([71 x i8], [71 x i8]* @.str.39, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %92

92:                                               ; preds = %62, %10
  %93 = load i32, i32* %3, align 4
  ret i32 %93
}

declare dso_local noalias %struct._IO_FILE* @fopen(i8* noundef, i8* noundef) #1

declare dso_local i32 @fprintf(%struct._IO_FILE* noundef, i8* noundef, ...) #1

declare dso_local i32 @fclose(%struct._IO_FILE* noundef) #1

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 14.0.6 (https://github.com/llvm/llvm-project.git f28c006a5895fc0e329fe15fead81e37457cb1d1)"}
