; ModuleID = './rmatmult3.ll'
source_filename = "/project/test/llvm-test-suite/MultiSource/Benchmarks/ASC_Sequoia/IRSmk/rmatmult3.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Domain_s = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RadiationData_t = type { double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double* }

@.str = private unnamed_addr constant [10 x i8] c"rmatmult3\00", align 1
@kmin = dso_local global i32 0, align 4
@kmax = dso_local global i32 0, align 4
@jmin = dso_local global i32 0, align 4
@jmax = dso_local global i32 0, align 4
@imin = dso_local global i32 0, align 4
@imax = dso_local global i32 0, align 4
@kp = dso_local global i32 0, align 4
@jp = dso_local global i32 0, align 4
@i_lb = dso_local global i32 0, align 4
@i_ub = dso_local global i32 0, align 4
@x_size = dso_local global i32 0, align 4

; Function Attrs: nofree noinline nosync nounwind uwtable
define dso_local void @rmatmult3(%struct.Domain_s* nocapture noundef readonly %0, %struct.RadiationData_t* noundef readonly %1, double* noundef readonly %2, double* nocapture noundef writeonly %3) #0 {
  %5 = getelementptr inbounds %struct.Domain_s, %struct.Domain_s* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.Domain_s, %struct.Domain_s* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.Domain_s, %struct.Domain_s* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.Domain_s, %struct.Domain_s* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.Domain_s, %struct.Domain_s* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.Domain_s, %struct.Domain_s* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.Domain_s, %struct.Domain_s* %0, i64 0, i32 17
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.Domain_s, %struct.Domain_s* %0, i64 0, i32 18
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 0
  %22 = load double*, double** %21, align 8
  %23 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 1
  %24 = load double*, double** %23, align 8
  %25 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 2
  %26 = load double*, double** %25, align 8
  %27 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 3
  %28 = load double*, double** %27, align 8
  %29 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 4
  %30 = load double*, double** %29, align 8
  %31 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 5
  %32 = load double*, double** %31, align 8
  %33 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 6
  %34 = load double*, double** %33, align 8
  %35 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 7
  %36 = load double*, double** %35, align 8
  %37 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 8
  %38 = load double*, double** %37, align 8
  %39 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 9
  %40 = load double*, double** %39, align 8
  %41 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 10
  %42 = load double*, double** %41, align 8
  %43 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 11
  %44 = load double*, double** %43, align 8
  %45 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 12
  %46 = load double*, double** %45, align 8
  %47 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 13
  %48 = load double*, double** %47, align 8
  %49 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 14
  %50 = load double*, double** %49, align 8
  %51 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 15
  %52 = load double*, double** %51, align 8
  %53 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 16
  %54 = load double*, double** %53, align 8
  %55 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 17
  %56 = load double*, double** %55, align 8
  %57 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 18
  %58 = load double*, double** %57, align 8
  %59 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 19
  %60 = load double*, double** %59, align 8
  %61 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 20
  %62 = load double*, double** %61, align 8
  %63 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 21
  %64 = load double*, double** %63, align 8
  %65 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 22
  %66 = load double*, double** %65, align 8
  %67 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 23
  %68 = load double*, double** %67, align 8
  %69 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 24
  %70 = load double*, double** %69, align 8
  %71 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 25
  %72 = load double*, double** %71, align 8
  %73 = getelementptr inbounds %struct.RadiationData_t, %struct.RadiationData_t* %1, i64 0, i32 26
  %74 = load double*, double** %73, align 8
  %75 = sext i32 %20 to i64
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds double, double* %2, i64 %76
  %78 = sext i32 %18 to i64
  %79 = sub nsw i64 0, %78
  %80 = getelementptr inbounds double, double* %77, i64 %79
  %81 = getelementptr inbounds double, double* %80, i64 -1
  %82 = sext i32 %20 to i64
  %83 = sub nsw i64 0, %82
  %84 = getelementptr inbounds double, double* %2, i64 %83
  %85 = sext i32 %18 to i64
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds double, double* %84, i64 %86
  %88 = sext i32 %20 to i64
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds double, double* %2, i64 %89
  %91 = sext i32 %18 to i64
  %92 = sub nsw i64 0, %91
  %93 = getelementptr inbounds double, double* %90, i64 %92
  %94 = getelementptr inbounds double, double* %93, i64 1
  %95 = sext i32 %20 to i64
  %96 = sub nsw i64 0, %95
  %97 = getelementptr inbounds double, double* %2, i64 %96
  %98 = getelementptr inbounds double, double* %97, i64 -1
  %99 = sext i32 %20 to i64
  %100 = sub nsw i64 0, %99
  %101 = getelementptr inbounds double, double* %2, i64 %100
  %102 = sext i32 %20 to i64
  %103 = sub nsw i64 0, %102
  %104 = getelementptr inbounds double, double* %2, i64 %103
  %105 = getelementptr inbounds double, double* %104, i64 1
  %106 = sext i32 %20 to i64
  %107 = sub nsw i64 0, %106
  %108 = getelementptr inbounds double, double* %2, i64 %107
  %109 = sext i32 %18 to i64
  %110 = getelementptr inbounds double, double* %108, i64 %109
  %111 = getelementptr inbounds double, double* %110, i64 -1
  %112 = sext i32 %20 to i64
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds double, double* %2, i64 %113
  %115 = sext i32 %18 to i64
  %116 = getelementptr inbounds double, double* %114, i64 %115
  %117 = sext i32 %20 to i64
  %118 = sub nsw i64 0, %117
  %119 = getelementptr inbounds double, double* %2, i64 %118
  %120 = sext i32 %18 to i64
  %121 = getelementptr inbounds double, double* %119, i64 %120
  %122 = getelementptr inbounds double, double* %121, i64 1
  %123 = sext i32 %18 to i64
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds double, double* %2, i64 %124
  %126 = getelementptr inbounds double, double* %125, i64 -1
  %127 = sext i32 %18 to i64
  %128 = sub nsw i64 0, %127
  %129 = getelementptr inbounds double, double* %2, i64 %128
  %130 = sext i32 %18 to i64
  %131 = sub nsw i64 0, %130
  %132 = getelementptr inbounds double, double* %2, i64 %131
  %133 = getelementptr inbounds double, double* %132, i64 1
  %134 = getelementptr inbounds double, double* %2, i64 -1
  %135 = getelementptr inbounds double, double* %2, i64 1
  %136 = sext i32 %18 to i64
  %137 = getelementptr inbounds double, double* %2, i64 %136
  %138 = getelementptr inbounds double, double* %137, i64 -1
  %139 = sext i32 %18 to i64
  %140 = getelementptr inbounds double, double* %2, i64 %139
  %141 = sext i32 %18 to i64
  %142 = getelementptr inbounds double, double* %2, i64 %141
  %143 = getelementptr inbounds double, double* %142, i64 1
  %144 = sext i32 %20 to i64
  %145 = getelementptr inbounds double, double* %2, i64 %144
  %146 = sext i32 %18 to i64
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds double, double* %145, i64 %147
  %149 = getelementptr inbounds double, double* %148, i64 -1
  %150 = sext i32 %20 to i64
  %151 = getelementptr inbounds double, double* %2, i64 %150
  %152 = sext i32 %18 to i64
  %153 = sub nsw i64 0, %152
  %154 = getelementptr inbounds double, double* %151, i64 %153
  %155 = sext i32 %20 to i64
  %156 = getelementptr inbounds double, double* %2, i64 %155
  %157 = sext i32 %18 to i64
  %158 = sub nsw i64 0, %157
  %159 = getelementptr inbounds double, double* %156, i64 %158
  %160 = getelementptr inbounds double, double* %159, i64 1
  %161 = sext i32 %20 to i64
  %162 = getelementptr inbounds double, double* %2, i64 %161
  %163 = getelementptr inbounds double, double* %162, i64 -1
  %164 = sext i32 %20 to i64
  %165 = getelementptr inbounds double, double* %2, i64 %164
  %166 = sext i32 %20 to i64
  %167 = getelementptr inbounds double, double* %2, i64 %166
  %168 = getelementptr inbounds double, double* %167, i64 1
  %169 = sext i32 %20 to i64
  %170 = getelementptr inbounds double, double* %2, i64 %169
  %171 = sext i32 %18 to i64
  %172 = getelementptr inbounds double, double* %170, i64 %171
  %173 = getelementptr inbounds double, double* %172, i64 -1
  %174 = sext i32 %20 to i64
  %175 = getelementptr inbounds double, double* %2, i64 %174
  %176 = sext i32 %18 to i64
  %177 = getelementptr inbounds double, double* %175, i64 %176
  %178 = sext i32 %20 to i64
  %179 = getelementptr inbounds double, double* %2, i64 %178
  %180 = sext i32 %18 to i64
  %181 = getelementptr inbounds double, double* %179, i64 %180
  %182 = getelementptr inbounds double, double* %181, i64 1
  br label %183

183:                                              ; preds = %393, %4
  %.0 = phi i32 [ %14, %4 ], [ %394, %393 ]
  %184 = icmp slt i32 %.0, %16
  br i1 %184, label %185, label %395

185:                                              ; preds = %183
  br label %186

186:                                              ; preds = %390, %185
  %.01 = phi i32 [ %10, %185 ], [ %391, %390 ]
  %187 = icmp slt i32 %.01, %12
  br i1 %187, label %188, label %392

188:                                              ; preds = %186
  br label %189

189:                                              ; preds = %387, %188
  %.02 = phi i32 [ %6, %188 ], [ %388, %387 ]
  %190 = icmp slt i32 %.02, %8
  br i1 %190, label %191, label %389

191:                                              ; preds = %189
  %192 = mul nsw i32 %.01, %18
  %193 = add nsw i32 %.02, %192
  %194 = mul nsw i32 %.0, %20
  %195 = add nsw i32 %193, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds double, double* %22, i64 %196
  %198 = load double, double* %197, align 8
  %199 = sext i32 %195 to i64
  %200 = getelementptr inbounds double, double* %81, i64 %199
  %201 = load double, double* %200, align 8
  %202 = sext i32 %195 to i64
  %203 = getelementptr inbounds double, double* %24, i64 %202
  %204 = load double, double* %203, align 8
  %205 = sext i32 %195 to i64
  %206 = getelementptr inbounds double, double* %87, i64 %205
  %207 = load double, double* %206, align 8
  %208 = fmul double %204, %207
  %209 = call double @llvm.fmuladd.f64(double %198, double %201, double %208)
  %210 = sext i32 %195 to i64
  %211 = getelementptr inbounds double, double* %26, i64 %210
  %212 = load double, double* %211, align 8
  %213 = sext i32 %195 to i64
  %214 = getelementptr inbounds double, double* %94, i64 %213
  %215 = load double, double* %214, align 8
  %216 = call double @llvm.fmuladd.f64(double %212, double %215, double %209)
  %217 = sext i32 %195 to i64
  %218 = getelementptr inbounds double, double* %28, i64 %217
  %219 = load double, double* %218, align 8
  %220 = sext i32 %195 to i64
  %221 = getelementptr inbounds double, double* %98, i64 %220
  %222 = load double, double* %221, align 8
  %223 = call double @llvm.fmuladd.f64(double %219, double %222, double %216)
  %224 = sext i32 %195 to i64
  %225 = getelementptr inbounds double, double* %30, i64 %224
  %226 = load double, double* %225, align 8
  %227 = sext i32 %195 to i64
  %228 = getelementptr inbounds double, double* %101, i64 %227
  %229 = load double, double* %228, align 8
  %230 = call double @llvm.fmuladd.f64(double %226, double %229, double %223)
  %231 = sext i32 %195 to i64
  %232 = getelementptr inbounds double, double* %32, i64 %231
  %233 = load double, double* %232, align 8
  %234 = sext i32 %195 to i64
  %235 = getelementptr inbounds double, double* %105, i64 %234
  %236 = load double, double* %235, align 8
  %237 = call double @llvm.fmuladd.f64(double %233, double %236, double %230)
  %238 = sext i32 %195 to i64
  %239 = getelementptr inbounds double, double* %34, i64 %238
  %240 = load double, double* %239, align 8
  %241 = sext i32 %195 to i64
  %242 = getelementptr inbounds double, double* %111, i64 %241
  %243 = load double, double* %242, align 8
  %244 = call double @llvm.fmuladd.f64(double %240, double %243, double %237)
  %245 = sext i32 %195 to i64
  %246 = getelementptr inbounds double, double* %36, i64 %245
  %247 = load double, double* %246, align 8
  %248 = sext i32 %195 to i64
  %249 = getelementptr inbounds double, double* %116, i64 %248
  %250 = load double, double* %249, align 8
  %251 = call double @llvm.fmuladd.f64(double %247, double %250, double %244)
  %252 = sext i32 %195 to i64
  %253 = getelementptr inbounds double, double* %38, i64 %252
  %254 = load double, double* %253, align 8
  %255 = sext i32 %195 to i64
  %256 = getelementptr inbounds double, double* %122, i64 %255
  %257 = load double, double* %256, align 8
  %258 = call double @llvm.fmuladd.f64(double %254, double %257, double %251)
  %259 = sext i32 %195 to i64
  %260 = getelementptr inbounds double, double* %40, i64 %259
  %261 = load double, double* %260, align 8
  %262 = sext i32 %195 to i64
  %263 = getelementptr inbounds double, double* %126, i64 %262
  %264 = load double, double* %263, align 8
  %265 = call double @llvm.fmuladd.f64(double %261, double %264, double %258)
  %266 = sext i32 %195 to i64
  %267 = getelementptr inbounds double, double* %42, i64 %266
  %268 = load double, double* %267, align 8
  %269 = sext i32 %195 to i64
  %270 = getelementptr inbounds double, double* %129, i64 %269
  %271 = load double, double* %270, align 8
  %272 = call double @llvm.fmuladd.f64(double %268, double %271, double %265)
  %273 = sext i32 %195 to i64
  %274 = getelementptr inbounds double, double* %44, i64 %273
  %275 = load double, double* %274, align 8
  %276 = sext i32 %195 to i64
  %277 = getelementptr inbounds double, double* %133, i64 %276
  %278 = load double, double* %277, align 8
  %279 = call double @llvm.fmuladd.f64(double %275, double %278, double %272)
  %280 = sext i32 %195 to i64
  %281 = getelementptr inbounds double, double* %46, i64 %280
  %282 = load double, double* %281, align 8
  %283 = sext i32 %195 to i64
  %284 = getelementptr inbounds double, double* %134, i64 %283
  %285 = load double, double* %284, align 8
  %286 = call double @llvm.fmuladd.f64(double %282, double %285, double %279)
  %287 = sext i32 %195 to i64
  %288 = getelementptr inbounds double, double* %48, i64 %287
  %289 = load double, double* %288, align 8
  %290 = sext i32 %195 to i64
  %291 = getelementptr inbounds double, double* %2, i64 %290
  %292 = load double, double* %291, align 8
  %293 = call double @llvm.fmuladd.f64(double %289, double %292, double %286)
  %294 = sext i32 %195 to i64
  %295 = getelementptr inbounds double, double* %50, i64 %294
  %296 = load double, double* %295, align 8
  %297 = sext i32 %195 to i64
  %298 = getelementptr inbounds double, double* %135, i64 %297
  %299 = load double, double* %298, align 8
  %300 = call double @llvm.fmuladd.f64(double %296, double %299, double %293)
  %301 = sext i32 %195 to i64
  %302 = getelementptr inbounds double, double* %52, i64 %301
  %303 = load double, double* %302, align 8
  %304 = sext i32 %195 to i64
  %305 = getelementptr inbounds double, double* %138, i64 %304
  %306 = load double, double* %305, align 8
  %307 = call double @llvm.fmuladd.f64(double %303, double %306, double %300)
  %308 = sext i32 %195 to i64
  %309 = getelementptr inbounds double, double* %54, i64 %308
  %310 = load double, double* %309, align 8
  %311 = sext i32 %195 to i64
  %312 = getelementptr inbounds double, double* %140, i64 %311
  %313 = load double, double* %312, align 8
  %314 = call double @llvm.fmuladd.f64(double %310, double %313, double %307)
  %315 = sext i32 %195 to i64
  %316 = getelementptr inbounds double, double* %56, i64 %315
  %317 = load double, double* %316, align 8
  %318 = sext i32 %195 to i64
  %319 = getelementptr inbounds double, double* %143, i64 %318
  %320 = load double, double* %319, align 8
  %321 = call double @llvm.fmuladd.f64(double %317, double %320, double %314)
  %322 = sext i32 %195 to i64
  %323 = getelementptr inbounds double, double* %58, i64 %322
  %324 = load double, double* %323, align 8
  %325 = sext i32 %195 to i64
  %326 = getelementptr inbounds double, double* %149, i64 %325
  %327 = load double, double* %326, align 8
  %328 = call double @llvm.fmuladd.f64(double %324, double %327, double %321)
  %329 = sext i32 %195 to i64
  %330 = getelementptr inbounds double, double* %60, i64 %329
  %331 = load double, double* %330, align 8
  %332 = sext i32 %195 to i64
  %333 = getelementptr inbounds double, double* %154, i64 %332
  %334 = load double, double* %333, align 8
  %335 = call double @llvm.fmuladd.f64(double %331, double %334, double %328)
  %336 = sext i32 %195 to i64
  %337 = getelementptr inbounds double, double* %62, i64 %336
  %338 = load double, double* %337, align 8
  %339 = sext i32 %195 to i64
  %340 = getelementptr inbounds double, double* %160, i64 %339
  %341 = load double, double* %340, align 8
  %342 = call double @llvm.fmuladd.f64(double %338, double %341, double %335)
  %343 = sext i32 %195 to i64
  %344 = getelementptr inbounds double, double* %64, i64 %343
  %345 = load double, double* %344, align 8
  %346 = sext i32 %195 to i64
  %347 = getelementptr inbounds double, double* %163, i64 %346
  %348 = load double, double* %347, align 8
  %349 = call double @llvm.fmuladd.f64(double %345, double %348, double %342)
  %350 = sext i32 %195 to i64
  %351 = getelementptr inbounds double, double* %66, i64 %350
  %352 = load double, double* %351, align 8
  %353 = sext i32 %195 to i64
  %354 = getelementptr inbounds double, double* %165, i64 %353
  %355 = load double, double* %354, align 8
  %356 = call double @llvm.fmuladd.f64(double %352, double %355, double %349)
  %357 = sext i32 %195 to i64
  %358 = getelementptr inbounds double, double* %68, i64 %357
  %359 = load double, double* %358, align 8
  %360 = sext i32 %195 to i64
  %361 = getelementptr inbounds double, double* %168, i64 %360
  %362 = load double, double* %361, align 8
  %363 = call double @llvm.fmuladd.f64(double %359, double %362, double %356)
  %364 = sext i32 %195 to i64
  %365 = getelementptr inbounds double, double* %70, i64 %364
  %366 = load double, double* %365, align 8
  %367 = sext i32 %195 to i64
  %368 = getelementptr inbounds double, double* %173, i64 %367
  %369 = load double, double* %368, align 8
  %370 = call double @llvm.fmuladd.f64(double %366, double %369, double %363)
  %371 = sext i32 %195 to i64
  %372 = getelementptr inbounds double, double* %72, i64 %371
  %373 = load double, double* %372, align 8
  %374 = sext i32 %195 to i64
  %375 = getelementptr inbounds double, double* %177, i64 %374
  %376 = load double, double* %375, align 8
  %377 = call double @llvm.fmuladd.f64(double %373, double %376, double %370)
  %378 = sext i32 %195 to i64
  %379 = getelementptr inbounds double, double* %74, i64 %378
  %380 = load double, double* %379, align 8
  %381 = sext i32 %195 to i64
  %382 = getelementptr inbounds double, double* %182, i64 %381
  %383 = load double, double* %382, align 8
  %384 = call double @llvm.fmuladd.f64(double %380, double %383, double %377)
  %385 = sext i32 %195 to i64
  %386 = getelementptr inbounds double, double* %3, i64 %385
  store double %384, double* %386, align 8
  br label %387

387:                                              ; preds = %191
  %388 = add nsw i32 %.02, 1
  br label %189, !llvm.loop !4

389:                                              ; preds = %189
  br label %390

390:                                              ; preds = %389
  %391 = add nsw i32 %.01, 1
  br label %186, !llvm.loop !6

392:                                              ; preds = %186
  br label %393

393:                                              ; preds = %392
  %394 = add nsw i32 %.0, 1
  br label %183, !llvm.loop !7

395:                                              ; preds = %183
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fmuladd.f64(double, double, double) #1

attributes #0 = { nofree noinline nosync nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 14.0.6 (https://github.com/llvm/llvm-project.git f28c006a5895fc0e329fe15fead81e37457cb1d1)"}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.mustprogress"}
!6 = distinct !{!6, !5}
!7 = distinct !{!7, !5}
