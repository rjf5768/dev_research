; ModuleID = './gsm_encode.ll'
source_filename = "/project/test/llvm-test-suite/MultiSource/Benchmarks/mediabench/gsm/toast/gsm_encode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gsm_state = type { [280 x i16], i16, i64, i32, [8 x i16], [2 x [8 x i16]], i16, i16, [9 x i16], i16, i8, i8 }

; Function Attrs: noinline nounwind uwtable
define dso_local void @gsm_encode(%struct.gsm_state* noundef %0, i16* noundef %1, i8* nocapture noundef writeonly %2) #0 {
  %4 = alloca [8 x i16], align 16
  %5 = alloca [4 x i16], align 2
  %6 = alloca [4 x i16], align 2
  %7 = alloca [4 x i16], align 2
  %8 = alloca [4 x i16], align 2
  %9 = alloca [52 x i16], align 16
  %10 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 0
  %11 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 0
  %12 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 0
  %13 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 0
  %14 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 0
  %15 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 0
  call void @Gsm_Coder(%struct.gsm_state* noundef %0, i16* noundef %1, i16* noundef nonnull %10, i16* noundef nonnull %11, i16* noundef nonnull %12, i16* noundef nonnull %13, i16* noundef nonnull %14, i16* noundef nonnull %15) #2
  %16 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 0
  %17 = load i16, i16* %16, align 16
  %18 = trunc i16 %17 to i8
  %19 = lshr i8 %18, 2
  %20 = and i8 %19, 15
  %21 = or i8 %20, -48
  %22 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %21, i8* %2, align 1
  %23 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 0
  %24 = load i16, i16* %23, align 16
  %25 = shl i16 %24, 6
  %26 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 1
  %27 = load i16, i16* %26, align 2
  %28 = and i16 %27, 63
  %29 = or i16 %25, %28
  %30 = trunc i16 %29 to i8
  %31 = getelementptr inbounds i8, i8* %2, i64 2
  store i8 %30, i8* %22, align 1
  %32 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 2
  %33 = load i16, i16* %32, align 4
  %34 = shl i16 %33, 3
  %35 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 3
  %36 = load i16, i16* %35, align 2
  %37 = lshr i16 %36, 2
  %38 = and i16 %37, 7
  %39 = or i16 %34, %38
  %40 = trunc i16 %39 to i8
  %41 = getelementptr inbounds i8, i8* %2, i64 3
  store i8 %40, i8* %31, align 1
  %42 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 3
  %43 = load i16, i16* %42, align 2
  %44 = shl i16 %43, 6
  %45 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 4
  %46 = load i16, i16* %45, align 8
  %47 = shl i16 %46, 2
  %48 = and i16 %47, 60
  %49 = or i16 %44, %48
  %50 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 5
  %51 = load i16, i16* %50, align 2
  %52 = lshr i16 %51, 2
  %53 = and i16 %52, 3
  %54 = or i16 %49, %53
  %55 = trunc i16 %54 to i8
  %56 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 %55, i8* %41, align 1
  %57 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 5
  %58 = load i16, i16* %57, align 2
  %59 = shl i16 %58, 6
  %60 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 6
  %61 = load i16, i16* %60, align 4
  %62 = shl i16 %61, 3
  %63 = and i16 %62, 56
  %64 = or i16 %59, %63
  %65 = getelementptr inbounds [8 x i16], [8 x i16]* %4, i64 0, i64 7
  %66 = load i16, i16* %65, align 2
  %67 = and i16 %66, 7
  %68 = or i16 %64, %67
  %69 = trunc i16 %68 to i8
  %70 = getelementptr inbounds i8, i8* %2, i64 5
  store i8 %69, i8* %56, align 1
  %71 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 0
  %72 = load i16, i16* %71, align 2
  %73 = shl i16 %72, 1
  %74 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 0
  %75 = load i16, i16* %74, align 2
  %76 = lshr i16 %75, 1
  %77 = and i16 %76, 1
  %78 = or i16 %73, %77
  %79 = trunc i16 %78 to i8
  %80 = getelementptr inbounds i8, i8* %2, i64 6
  store i8 %79, i8* %70, align 1
  %81 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 0
  %82 = load i16, i16* %81, align 2
  %83 = shl i16 %82, 7
  %84 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 0
  %85 = load i16, i16* %84, align 2
  %86 = shl i16 %85, 5
  %87 = and i16 %86, 96
  %88 = or i16 %83, %87
  %89 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 0
  %90 = load i16, i16* %89, align 2
  %91 = lshr i16 %90, 1
  %92 = and i16 %91, 31
  %93 = or i16 %88, %92
  %94 = trunc i16 %93 to i8
  %95 = getelementptr inbounds i8, i8* %2, i64 7
  store i8 %94, i8* %80, align 1
  %96 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 0
  %97 = load i16, i16* %96, align 2
  %98 = shl i16 %97, 7
  %99 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 0
  %100 = load i16, i16* %99, align 16
  %101 = shl i16 %100, 4
  %102 = and i16 %101, 112
  %103 = or i16 %98, %102
  %104 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 1
  %105 = load i16, i16* %104, align 2
  %106 = shl i16 %105, 1
  %107 = and i16 %106, 14
  %108 = or i16 %103, %107
  %109 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 2
  %110 = load i16, i16* %109, align 4
  %111 = lshr i16 %110, 2
  %112 = and i16 %111, 1
  %113 = or i16 %108, %112
  %114 = trunc i16 %113 to i8
  %115 = getelementptr inbounds i8, i8* %2, i64 8
  store i8 %114, i8* %95, align 1
  %116 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 2
  %117 = load i16, i16* %116, align 4
  %118 = shl i16 %117, 6
  %119 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 3
  %120 = load i16, i16* %119, align 2
  %121 = shl i16 %120, 3
  %122 = and i16 %121, 56
  %123 = or i16 %118, %122
  %124 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 4
  %125 = load i16, i16* %124, align 8
  %126 = and i16 %125, 7
  %127 = or i16 %123, %126
  %128 = trunc i16 %127 to i8
  %129 = getelementptr inbounds i8, i8* %2, i64 9
  store i8 %128, i8* %115, align 1
  %130 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 5
  %131 = load i16, i16* %130, align 2
  %132 = shl i16 %131, 5
  %133 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 6
  %134 = load i16, i16* %133, align 4
  %135 = shl i16 %134, 2
  %136 = and i16 %135, 28
  %137 = or i16 %132, %136
  %138 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 7
  %139 = load i16, i16* %138, align 2
  %140 = lshr i16 %139, 1
  %141 = and i16 %140, 3
  %142 = or i16 %137, %141
  %143 = trunc i16 %142 to i8
  %144 = getelementptr inbounds i8, i8* %2, i64 10
  store i8 %143, i8* %129, align 1
  %145 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 7
  %146 = load i16, i16* %145, align 2
  %147 = shl i16 %146, 7
  %148 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 8
  %149 = load i16, i16* %148, align 16
  %150 = shl i16 %149, 4
  %151 = and i16 %150, 112
  %152 = or i16 %147, %151
  %153 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 9
  %154 = load i16, i16* %153, align 2
  %155 = shl i16 %154, 1
  %156 = and i16 %155, 14
  %157 = or i16 %152, %156
  %158 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 10
  %159 = load i16, i16* %158, align 4
  %160 = lshr i16 %159, 2
  %161 = and i16 %160, 1
  %162 = or i16 %157, %161
  %163 = trunc i16 %162 to i8
  %164 = getelementptr inbounds i8, i8* %2, i64 11
  store i8 %163, i8* %144, align 1
  %165 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 10
  %166 = load i16, i16* %165, align 4
  %167 = shl i16 %166, 6
  %168 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 11
  %169 = load i16, i16* %168, align 2
  %170 = shl i16 %169, 3
  %171 = and i16 %170, 56
  %172 = or i16 %167, %171
  %173 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 12
  %174 = load i16, i16* %173, align 8
  %175 = and i16 %174, 7
  %176 = or i16 %172, %175
  %177 = trunc i16 %176 to i8
  %178 = getelementptr inbounds i8, i8* %2, i64 12
  store i8 %177, i8* %164, align 1
  %179 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 1
  %180 = load i16, i16* %179, align 2
  %181 = shl i16 %180, 1
  %182 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 1
  %183 = load i16, i16* %182, align 2
  %184 = lshr i16 %183, 1
  %185 = and i16 %184, 1
  %186 = or i16 %181, %185
  %187 = trunc i16 %186 to i8
  %188 = getelementptr inbounds i8, i8* %2, i64 13
  store i8 %187, i8* %178, align 1
  %189 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 1
  %190 = load i16, i16* %189, align 2
  %191 = shl i16 %190, 7
  %192 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 1
  %193 = load i16, i16* %192, align 2
  %194 = shl i16 %193, 5
  %195 = and i16 %194, 96
  %196 = or i16 %191, %195
  %197 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 1
  %198 = load i16, i16* %197, align 2
  %199 = lshr i16 %198, 1
  %200 = and i16 %199, 31
  %201 = or i16 %196, %200
  %202 = trunc i16 %201 to i8
  %203 = getelementptr inbounds i8, i8* %2, i64 14
  store i8 %202, i8* %188, align 1
  %204 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 1
  %205 = load i16, i16* %204, align 2
  %206 = shl i16 %205, 7
  %207 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 13
  %208 = load i16, i16* %207, align 2
  %209 = shl i16 %208, 4
  %210 = and i16 %209, 112
  %211 = or i16 %206, %210
  %212 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 14
  %213 = load i16, i16* %212, align 4
  %214 = shl i16 %213, 1
  %215 = and i16 %214, 14
  %216 = or i16 %211, %215
  %217 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 15
  %218 = load i16, i16* %217, align 2
  %219 = lshr i16 %218, 2
  %220 = and i16 %219, 1
  %221 = or i16 %216, %220
  %222 = trunc i16 %221 to i8
  %223 = getelementptr inbounds i8, i8* %2, i64 15
  store i8 %222, i8* %203, align 1
  %224 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 15
  %225 = load i16, i16* %224, align 2
  %226 = shl i16 %225, 6
  %227 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 16
  %228 = load i16, i16* %227, align 16
  %229 = shl i16 %228, 3
  %230 = and i16 %229, 56
  %231 = or i16 %226, %230
  %232 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 17
  %233 = load i16, i16* %232, align 2
  %234 = and i16 %233, 7
  %235 = or i16 %231, %234
  %236 = trunc i16 %235 to i8
  %237 = getelementptr inbounds i8, i8* %2, i64 16
  store i8 %236, i8* %223, align 1
  %238 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 18
  %239 = load i16, i16* %238, align 4
  %240 = shl i16 %239, 5
  %241 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 19
  %242 = load i16, i16* %241, align 2
  %243 = shl i16 %242, 2
  %244 = and i16 %243, 28
  %245 = or i16 %240, %244
  %246 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 20
  %247 = load i16, i16* %246, align 8
  %248 = lshr i16 %247, 1
  %249 = and i16 %248, 3
  %250 = or i16 %245, %249
  %251 = trunc i16 %250 to i8
  %252 = getelementptr inbounds i8, i8* %2, i64 17
  store i8 %251, i8* %237, align 1
  %253 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 20
  %254 = load i16, i16* %253, align 8
  %255 = shl i16 %254, 7
  %256 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 21
  %257 = load i16, i16* %256, align 2
  %258 = shl i16 %257, 4
  %259 = and i16 %258, 112
  %260 = or i16 %255, %259
  %261 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 22
  %262 = load i16, i16* %261, align 4
  %263 = shl i16 %262, 1
  %264 = and i16 %263, 14
  %265 = or i16 %260, %264
  %266 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 23
  %267 = load i16, i16* %266, align 2
  %268 = lshr i16 %267, 2
  %269 = and i16 %268, 1
  %270 = or i16 %265, %269
  %271 = trunc i16 %270 to i8
  %272 = getelementptr inbounds i8, i8* %2, i64 18
  store i8 %271, i8* %252, align 1
  %273 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 23
  %274 = load i16, i16* %273, align 2
  %275 = shl i16 %274, 6
  %276 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 24
  %277 = load i16, i16* %276, align 16
  %278 = shl i16 %277, 3
  %279 = and i16 %278, 56
  %280 = or i16 %275, %279
  %281 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 25
  %282 = load i16, i16* %281, align 2
  %283 = and i16 %282, 7
  %284 = or i16 %280, %283
  %285 = trunc i16 %284 to i8
  %286 = getelementptr inbounds i8, i8* %2, i64 19
  store i8 %285, i8* %272, align 1
  %287 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 2
  %288 = load i16, i16* %287, align 2
  %289 = shl i16 %288, 1
  %290 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 2
  %291 = load i16, i16* %290, align 2
  %292 = lshr i16 %291, 1
  %293 = and i16 %292, 1
  %294 = or i16 %289, %293
  %295 = trunc i16 %294 to i8
  %296 = getelementptr inbounds i8, i8* %2, i64 20
  store i8 %295, i8* %286, align 1
  %297 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 2
  %298 = load i16, i16* %297, align 2
  %299 = shl i16 %298, 7
  %300 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 2
  %301 = load i16, i16* %300, align 2
  %302 = shl i16 %301, 5
  %303 = and i16 %302, 96
  %304 = or i16 %299, %303
  %305 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 2
  %306 = load i16, i16* %305, align 2
  %307 = lshr i16 %306, 1
  %308 = and i16 %307, 31
  %309 = or i16 %304, %308
  %310 = trunc i16 %309 to i8
  %311 = getelementptr inbounds i8, i8* %2, i64 21
  store i8 %310, i8* %296, align 1
  %312 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 2
  %313 = load i16, i16* %312, align 2
  %314 = shl i16 %313, 7
  %315 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 26
  %316 = load i16, i16* %315, align 4
  %317 = shl i16 %316, 4
  %318 = and i16 %317, 112
  %319 = or i16 %314, %318
  %320 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 27
  %321 = load i16, i16* %320, align 2
  %322 = shl i16 %321, 1
  %323 = and i16 %322, 14
  %324 = or i16 %319, %323
  %325 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 28
  %326 = load i16, i16* %325, align 8
  %327 = lshr i16 %326, 2
  %328 = and i16 %327, 1
  %329 = or i16 %324, %328
  %330 = trunc i16 %329 to i8
  %331 = getelementptr inbounds i8, i8* %2, i64 22
  store i8 %330, i8* %311, align 1
  %332 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 28
  %333 = load i16, i16* %332, align 8
  %334 = shl i16 %333, 6
  %335 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 29
  %336 = load i16, i16* %335, align 2
  %337 = shl i16 %336, 3
  %338 = and i16 %337, 56
  %339 = or i16 %334, %338
  %340 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 30
  %341 = load i16, i16* %340, align 4
  %342 = and i16 %341, 7
  %343 = or i16 %339, %342
  %344 = trunc i16 %343 to i8
  %345 = getelementptr inbounds i8, i8* %2, i64 23
  store i8 %344, i8* %331, align 1
  %346 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 31
  %347 = load i16, i16* %346, align 2
  %348 = shl i16 %347, 5
  %349 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 32
  %350 = load i16, i16* %349, align 16
  %351 = shl i16 %350, 2
  %352 = and i16 %351, 28
  %353 = or i16 %348, %352
  %354 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 33
  %355 = load i16, i16* %354, align 2
  %356 = lshr i16 %355, 1
  %357 = and i16 %356, 3
  %358 = or i16 %353, %357
  %359 = trunc i16 %358 to i8
  %360 = getelementptr inbounds i8, i8* %2, i64 24
  store i8 %359, i8* %345, align 1
  %361 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 33
  %362 = load i16, i16* %361, align 2
  %363 = shl i16 %362, 7
  %364 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 34
  %365 = load i16, i16* %364, align 4
  %366 = shl i16 %365, 4
  %367 = and i16 %366, 112
  %368 = or i16 %363, %367
  %369 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 35
  %370 = load i16, i16* %369, align 2
  %371 = shl i16 %370, 1
  %372 = and i16 %371, 14
  %373 = or i16 %368, %372
  %374 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 36
  %375 = load i16, i16* %374, align 8
  %376 = lshr i16 %375, 2
  %377 = and i16 %376, 1
  %378 = or i16 %373, %377
  %379 = trunc i16 %378 to i8
  %380 = getelementptr inbounds i8, i8* %2, i64 25
  store i8 %379, i8* %360, align 1
  %381 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 36
  %382 = load i16, i16* %381, align 8
  %383 = shl i16 %382, 6
  %384 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 37
  %385 = load i16, i16* %384, align 2
  %386 = shl i16 %385, 3
  %387 = and i16 %386, 56
  %388 = or i16 %383, %387
  %389 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 38
  %390 = load i16, i16* %389, align 4
  %391 = and i16 %390, 7
  %392 = or i16 %388, %391
  %393 = trunc i16 %392 to i8
  %394 = getelementptr inbounds i8, i8* %2, i64 26
  store i8 %393, i8* %380, align 1
  %395 = getelementptr inbounds [4 x i16], [4 x i16]* %5, i64 0, i64 3
  %396 = load i16, i16* %395, align 2
  %397 = shl i16 %396, 1
  %398 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 3
  %399 = load i16, i16* %398, align 2
  %400 = lshr i16 %399, 1
  %401 = and i16 %400, 1
  %402 = or i16 %397, %401
  %403 = trunc i16 %402 to i8
  %404 = getelementptr inbounds i8, i8* %2, i64 27
  store i8 %403, i8* %394, align 1
  %405 = getelementptr inbounds [4 x i16], [4 x i16]* %7, i64 0, i64 3
  %406 = load i16, i16* %405, align 2
  %407 = shl i16 %406, 7
  %408 = getelementptr inbounds [4 x i16], [4 x i16]* %6, i64 0, i64 3
  %409 = load i16, i16* %408, align 2
  %410 = shl i16 %409, 5
  %411 = and i16 %410, 96
  %412 = or i16 %407, %411
  %413 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 3
  %414 = load i16, i16* %413, align 2
  %415 = lshr i16 %414, 1
  %416 = and i16 %415, 31
  %417 = or i16 %412, %416
  %418 = trunc i16 %417 to i8
  %419 = getelementptr inbounds i8, i8* %2, i64 28
  store i8 %418, i8* %404, align 1
  %420 = getelementptr inbounds [4 x i16], [4 x i16]* %8, i64 0, i64 3
  %421 = load i16, i16* %420, align 2
  %422 = shl i16 %421, 7
  %423 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 39
  %424 = load i16, i16* %423, align 2
  %425 = shl i16 %424, 4
  %426 = and i16 %425, 112
  %427 = or i16 %422, %426
  %428 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 40
  %429 = load i16, i16* %428, align 16
  %430 = shl i16 %429, 1
  %431 = and i16 %430, 14
  %432 = or i16 %427, %431
  %433 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 41
  %434 = load i16, i16* %433, align 2
  %435 = lshr i16 %434, 2
  %436 = and i16 %435, 1
  %437 = or i16 %432, %436
  %438 = trunc i16 %437 to i8
  %439 = getelementptr inbounds i8, i8* %2, i64 29
  store i8 %438, i8* %419, align 1
  %440 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 41
  %441 = load i16, i16* %440, align 2
  %442 = shl i16 %441, 6
  %443 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 42
  %444 = load i16, i16* %443, align 4
  %445 = shl i16 %444, 3
  %446 = and i16 %445, 56
  %447 = or i16 %442, %446
  %448 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 43
  %449 = load i16, i16* %448, align 2
  %450 = and i16 %449, 7
  %451 = or i16 %447, %450
  %452 = trunc i16 %451 to i8
  %453 = getelementptr inbounds i8, i8* %2, i64 30
  store i8 %452, i8* %439, align 1
  %454 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 44
  %455 = load i16, i16* %454, align 8
  %456 = shl i16 %455, 5
  %457 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 45
  %458 = load i16, i16* %457, align 2
  %459 = shl i16 %458, 2
  %460 = and i16 %459, 28
  %461 = or i16 %456, %460
  %462 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 46
  %463 = load i16, i16* %462, align 4
  %464 = lshr i16 %463, 1
  %465 = and i16 %464, 3
  %466 = or i16 %461, %465
  %467 = trunc i16 %466 to i8
  %468 = getelementptr inbounds i8, i8* %2, i64 31
  store i8 %467, i8* %453, align 1
  %469 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 46
  %470 = load i16, i16* %469, align 4
  %471 = shl i16 %470, 7
  %472 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 47
  %473 = load i16, i16* %472, align 2
  %474 = shl i16 %473, 4
  %475 = and i16 %474, 112
  %476 = or i16 %471, %475
  %477 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 48
  %478 = load i16, i16* %477, align 16
  %479 = shl i16 %478, 1
  %480 = and i16 %479, 14
  %481 = or i16 %476, %480
  %482 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 49
  %483 = load i16, i16* %482, align 2
  %484 = lshr i16 %483, 2
  %485 = and i16 %484, 1
  %486 = or i16 %481, %485
  %487 = trunc i16 %486 to i8
  %488 = getelementptr inbounds i8, i8* %2, i64 32
  store i8 %487, i8* %468, align 1
  %489 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 49
  %490 = load i16, i16* %489, align 2
  %491 = shl i16 %490, 6
  %492 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 50
  %493 = load i16, i16* %492, align 4
  %494 = shl i16 %493, 3
  %495 = and i16 %494, 56
  %496 = or i16 %491, %495
  %497 = getelementptr inbounds [52 x i16], [52 x i16]* %9, i64 0, i64 51
  %498 = load i16, i16* %497, align 2
  %499 = and i16 %498, 7
  %500 = or i16 %496, %499
  %501 = trunc i16 %500 to i8
  store i8 %501, i8* %488, align 1
  ret void
}

declare dso_local void @Gsm_Coder(%struct.gsm_state* noundef, i16* noundef, i16* noundef, i16* noundef, i16* noundef, i16* noundef, i16* noundef, i16* noundef) #1

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 14.0.6 (https://github.com/llvm/llvm-project.git f28c006a5895fc0e329fe15fead81e37457cb1d1)"}
