; ModuleID = './ckconfig.ll'
source_filename = "/project/test/llvm-test-suite/MultiSource/Benchmarks/mediabench/jpeg/jpeg-6a/ckconfig.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@carray = internal constant [3 x i32] [i32 1, i32 2, i32 3], align 4
@.str = private unnamed_addr constant [62 x i8] c"Hmm, it seems 'char' is not eight bits wide on your machine.\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"I fear the JPEG software will not work at all.\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"Right shift isn't acting as I expect it to.\0A\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"jconfig.h\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"Failed to write jconfig.h\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"/* jconfig.h --- generated by ckconfig.c */\0A\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"/* see jconfig.doc for explanations */\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"#define HAVE_PROTOTYPES\0A\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"#define HAVE_UNSIGNED_CHAR\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"#define HAVE_UNSIGNED_SHORT\0A\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"/* #define void char */\0A\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"/* #define const */\0A\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"#undef CHAR_IS_UNSIGNED\0A\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"#define CHAR_IS_UNSIGNED\0A\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"#define HAVE_STDDEF_H\0A\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"#define HAVE_STDLIB_H\0A\00", align 1
@.str.17 = private unnamed_addr constant [25 x i8] c"#undef NEED_BSD_STRINGS\0A\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"#undef NEED_SYS_TYPES_H\0A\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"#undef NEED_FAR_POINTERS\0A\00", align 1
@.str.20 = private unnamed_addr constant [34 x i8] c"#undef NEED_SHORT_EXTERNAL_NAMES\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"#undef INCOMPLETE_TYPES_BROKEN\0A\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"\0A#ifdef JPEG_INTERNALS\0A\0A\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"#undef RIGHT_SHIFT_IS_UNSIGNED\0A\00", align 1
@.str.24 = private unnamed_addr constant [33 x i8] c"#define RIGHT_SHIFT_IS_UNSIGNED\0A\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"\0A#endif /* JPEG_INTERNALS */\0A\00", align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"\0A#ifdef JPEG_CJPEG_DJPEG\0A\0A\00", align 1
@.str.27 = private unnamed_addr constant [52 x i8] c"#define BMP_SUPPORTED\09\09/* BMP image file format */\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"#define GIF_SUPPORTED\09\09/* GIF image file format */\0A\00", align 1
@.str.29 = private unnamed_addr constant [64 x i8] c"#define PPM_SUPPORTED\09\09/* PBMPLUS PPM/PGM image file format */\0A\00", align 1
@.str.30 = private unnamed_addr constant [56 x i8] c"#undef RLE_SUPPORTED\09\09/* Utah RLE image file format */\0A\00", align 1
@.str.31 = private unnamed_addr constant [57 x i8] c"#define TARGA_SUPPORTED\09\09/* Targa image file format */\0A\0A\00", align 1
@.str.32 = private unnamed_addr constant [73 x i8] c"#undef TWO_FILE_COMMANDLINE\09/* You may need this on non-Unix systems */\0A\00", align 1
@.str.33 = private unnamed_addr constant [68 x i8] c"#undef NEED_SIGNAL_CATCHER\09/* Define this if you use jmemname.c */\0A\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"#undef DONT_USE_B_MODE\0A\00", align 1
@.str.35 = private unnamed_addr constant [46 x i8] c"/* #define PROGRESS_REPORT */\09/* optional */\0A\00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"\0A#endif /* JPEG_CJPEG_DJPEG */\0A\00", align 1
@.str.37 = private unnamed_addr constant [65 x i8] c"Configuration check for Independent JPEG Group's software done.\0A\00", align 1
@.str.38 = private unnamed_addr constant [46 x i8] c"\0AI have written the jconfig.h file for you.\0A\0A\00", align 1
@.str.39 = private unnamed_addr constant [71 x i8] c"You should use makefile.ansi as the starting point for your Makefile.\0A\00", align 1
@un_char = dso_local global i8 0, align 1
@un_short = dso_local global i16 0, align 2
@str = private unnamed_addr constant [61 x i8] c"Hmm, it seems 'char' is not eight bits wide on your machine.\00", align 1
@str.1 = private unnamed_addr constant [48 x i8] c"I fear the JPEG software will not work at all.\0A\00", align 1
@str.2 = private unnamed_addr constant [44 x i8] c"Right shift isn't acting as I expect it to.\00", align 1
@str.3 = private unnamed_addr constant [48 x i8] c"I fear the JPEG software will not work at all.\0A\00", align 1
@str.4 = private unnamed_addr constant [64 x i8] c"Configuration check for Independent JPEG Group's software done.\00", align 1
@str.5 = private unnamed_addr constant [45 x i8] c"\0AI have written the jconfig.h file for you.\0A\00", align 1
@str.6 = private unnamed_addr constant [70 x i8] c"You should use makefile.ansi as the starting point for your Makefile.\00", align 1
@str.7 = private unnamed_addr constant [26 x i8] c"Failed to write jconfig.h\00", align 1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn
define dso_local i32 @testfunction(i32 noundef %0, i32* nocapture noundef readonly %1) #0 {
  %3 = sext i32 %0 to i64
  %4 = getelementptr inbounds i32, i32* %1, i64 %3
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @test2function() #1 {
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @test3function(i8* nocapture noundef readnone %0, void (i32, i32)* nocapture noundef readonly %1) #2 {
  call void %1(i32 noundef 1, i32 noundef 2) #5
  ret void
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @test4function(i32 noundef %0) #1 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [3 x i32], [3 x i32]* @carray, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @possibly_duplicate_function() #1 {
  ret i32 0
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define dso_local i32 @possibly_dupli_function() #1 {
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_char_signed(i32 noundef %0) #2 {
  %2 = icmp eq i32 %0, 189
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  %.not = icmp eq i32 %0, -67
  br i1 %.not, label %6, label %5

5:                                                ; preds = %4
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([61 x i8], [61 x i8]* @str, i64 0, i64 0))
  %puts1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @str.1, i64 0, i64 0))
  br label %6

6:                                                ; preds = %5, %4
  br label %7

7:                                                ; preds = %6
  br label %8

8:                                                ; preds = %7, %3
  %.0 = phi i32 [ 0, %3 ], [ 1, %7 ]
  ret i32 %.0
}

declare dso_local i32 @printf(i8* noundef, ...) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @is_shifting_signed(i64 noundef %0) #2 {
  %.mask = and i64 %0, -16
  %2 = icmp eq i64 %.mask, -2138996928
  br i1 %2, label %3, label %4

3:                                                ; preds = %1
  br label %9

4:                                                ; preds = %1
  %5 = and i64 %0, 4294967280
  %6 = icmp eq i64 %5, 2155970368
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  br label %9

8:                                                ; preds = %4
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([44 x i8], [44 x i8]* @str.2, i64 0, i64 0))
  %puts1 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([48 x i8], [48 x i8]* @str.3, i64 0, i64 0))
  br label %9

9:                                                ; preds = %8, %7, %3
  %.0 = phi i32 [ 1, %3 ], [ 0, %7 ], [ 0, %8 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32 noundef %0, i8** nocapture noundef readnone %1) #2 {
  %3 = call noalias %struct._IO_FILE* @fopen(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #5
  %4 = icmp eq %struct._IO_FILE* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  %puts4 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([26 x i8], [26 x i8]* @str.7, i64 0, i64 0))
  br label %47

6:                                                ; preds = %2
  %7 = call i64 @fwrite(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0), i64 44, i64 1, %struct._IO_FILE* %3)
  %8 = call i64 @fwrite(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i64 40, i64 1, %struct._IO_FILE* %3)
  %9 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %3)
  %10 = call i64 @fwrite(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i64 27, i64 1, %struct._IO_FILE* %3)
  %11 = call i64 @fwrite(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i64 28, i64 1, %struct._IO_FILE* %3)
  %12 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %3)
  %13 = call i64 @fwrite(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i64 20, i64 1, %struct._IO_FILE* %3)
  %14 = call i32 @is_char_signed(i32 noundef -67)
  %.not = icmp eq i32 %14, 0
  br i1 %.not, label %17, label %15

15:                                               ; preds = %6
  %16 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %3)
  br label %19

17:                                               ; preds = %6
  %18 = call i64 @fwrite(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0), i64 25, i64 1, %struct._IO_FILE* %3)
  br label %19

19:                                               ; preds = %17, %15
  %20 = call i64 @fwrite(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i64 22, i64 1, %struct._IO_FILE* %3)
  %21 = call i64 @fwrite(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i64 22, i64 1, %struct._IO_FILE* %3)
  %22 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %3)
  %23 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %3)
  %24 = call i64 @fwrite(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i64 25, i64 1, %struct._IO_FILE* %3)
  %25 = call i64 @fwrite(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.20, i64 0, i64 0), i64 33, i64 1, %struct._IO_FILE* %3)
  %26 = call i64 @fwrite(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %3)
  %27 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %3)
  %28 = call i32 @is_shifting_signed(i64 noundef -2138996913)
  %.not1 = icmp eq i32 %28, 0
  br i1 %.not1, label %31, label %29

29:                                               ; preds = %19
  %30 = call i64 @fwrite(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %3)
  br label %33

31:                                               ; preds = %19
  %32 = call i64 @fwrite(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24, i64 0, i64 0), i64 32, i64 1, %struct._IO_FILE* %3)
  br label %33

33:                                               ; preds = %31, %29
  %34 = call i64 @fwrite(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.25, i64 0, i64 0), i64 29, i64 1, %struct._IO_FILE* %3)
  %35 = call i64 @fwrite(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i64 26, i64 1, %struct._IO_FILE* %3)
  %36 = call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.27, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %3)
  %37 = call i64 @fwrite(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i64 0, i64 0), i64 51, i64 1, %struct._IO_FILE* %3)
  %38 = call i64 @fwrite(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.29, i64 0, i64 0), i64 63, i64 1, %struct._IO_FILE* %3)
  %39 = call i64 @fwrite(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.30, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %3)
  %40 = call i64 @fwrite(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.31, i64 0, i64 0), i64 56, i64 1, %struct._IO_FILE* %3)
  %41 = call i64 @fwrite(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.32, i64 0, i64 0), i64 72, i64 1, %struct._IO_FILE* %3)
  %42 = call i64 @fwrite(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.33, i64 0, i64 0), i64 67, i64 1, %struct._IO_FILE* %3)
  %43 = call i64 @fwrite(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %3)
  %44 = call i64 @fwrite(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35, i64 0, i64 0), i64 45, i64 1, %struct._IO_FILE* %3)
  %45 = call i64 @fwrite(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0), i64 31, i64 1, %struct._IO_FILE* %3)
  %46 = call i32 @fclose(%struct._IO_FILE* noundef %3) #5
  %puts = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([64 x i8], [64 x i8]* @str.4, i64 0, i64 0))
  %puts2 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([45 x i8], [45 x i8]* @str.5, i64 0, i64 0))
  %puts3 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([70 x i8], [70 x i8]* @str.6, i64 0, i64 0))
  br label %47

47:                                               ; preds = %33, %5
  %.0 = phi i32 [ 1, %5 ], [ 0, %33 ]
  ret i32 %.0
}

declare dso_local noalias %struct._IO_FILE* @fopen(i8* noundef, i8* noundef) #3

declare dso_local i32 @fprintf(%struct._IO_FILE* noundef, i8* noundef, ...) #3

declare dso_local i32 @fclose(%struct._IO_FILE* noundef) #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) #4

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(i8* nocapture noundef, i64 noundef, i64 noundef, %struct._IO_FILE* nocapture noundef) #4

attributes #0 = { mustprogress nofree noinline norecurse nosync nounwind readonly uwtable willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"uwtable", i32 1}
!2 = !{i32 7, !"frame-pointer", i32 2}
!3 = !{!"clang version 14.0.6 (https://github.com/llvm/llvm-project.git f28c006a5895fc0e329fe15fead81e37457cb1d1)"}
